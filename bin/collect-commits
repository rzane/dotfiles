require "time"
require "date"
require "pathname"
require "open3"

class Commit < Struct.new(:repo, :sha, :date, :message)
  def format(key)
    case key
    when :date
      date.strftime("%b %e, %l:%M %p")
    else
      send(key).to_s
    end
  end
end

root = Pathname.pwd
repos = root.glob("{*,*/*}/.git")

git = [
  "git",
  "log",
  "--author", "Ray Zane",
  "--pretty=format:%h\t%ad\t%s",
]

if ARGV.empty?
  git << "--after"
  git << "#{Date.today - 7} 00:00"
else
  git += ARGV
end

commits = repos.flat_map do |repo|
  repo = repo.parent
  name = repo.relative_path_from(root)
  out, _, _ = Open3.capture3(*git, chdir: repo)

  out.split("\n").map do |commit|
    sha, date, message = commit.split("\t")

    commit = Commit.new
    commit.repo = name
    commit.sha = sha
    commit.message = message
    commit.date = Time.parse(date)
    commit
  end
end

fields = %i(repo sha date message)
colors = [35, 33, 36, 39]

offsets = fields.map do |field|
  commits.map { |commit| commit.format(field).length }.max + 3
end

commits.sort_by(&:date).each do |commit|
  fields.each_with_index do |field, i|
    color = colors[i]
    offset = offsets[i]

    value = commit.format(field)
    value = value.ljust(offset)
    value = "\033[#{color}m#{value}\033[0m"
    print value
  end

  print "\n"
end
